steps:
# 1. Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/cloudrun-go-api:$COMMIT_SHA', '.']
  # Note: The Dockerfile in your provided code already handles the multi-stage build

# 2. Push the container image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/cloudrun-go-api:$COMMIT_SHA']

# 3. Deploy the container image to Cloud Run
- name: 'gcr.io/cloud-builders/gcloud'
  args: [
      'run',
      'deploy',
      'cloudrun-go-api', # Service name
      '--image', 'gcr.io/$PROJECT_ID/cloudrun-go-api:$COMMIT_SHA',
      '--platform', 'managed',
      '--region', '${_REGION}', # Use a substitution variable for region
      '--allow-unauthenticated', # Adjust as needed for public or private access
      # **Cloud SQL Connection Configuration**
      '--add-cloudsql-instances', '${_INSTANCE_CONNECTION_NAME}',
      # **Environment Variables**
      '--set-env-vars', 'DB_USER=${_DB_USER},DB_PASS=${_DB_PASS},DB_NAME=${_DB_NAME}'
  ]
timeout: '1600s'

# Substitutions to be passed to the build command
# These values will need to be provided when running the build.
substitutions:
    _REGION: us-central1
    _INSTANCE_CONNECTION_NAME: curdop7-474215:us-central1:my-mysql
    _DB_USER: root
    _DB_PASS: mahesh
    _DB_NAME: ecommercedb